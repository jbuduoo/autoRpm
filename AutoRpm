#!/bin/bash
#變數
newName=asmanager
newBigName=ASManager
newVersion=1.1.1
password=111111


#請勿更動
oldName=asmanager
oldBigName=ASManager
oldVersion=1.1.0
oldPassword=M8r@WSX


#------------------------------------------------------------------------------------------------------------------------------------	
	cat > /root/rpmbuild.sh <<_EOF_
#!/bin/bash

# 自動執行打包rpm
# 此腳本要給x權限
# chmod +x rpmbuild2.sh

# 複製webapps的資料-手動去複製
# cp -rf /opt/$newName/web/webapps/*/ /root/$newName/web/webapps
# 複製db的資料-手動去複製


# 產製資料
cd /root/
mkdir -p /root/$newName-$newVersion
cp -rf /root/$newName-$oldVersion/* /root/$newName-$newVersion

# 複製root
cd /root/$newName
tar zcvf /root/$newName-$newVersion/$newName.tar.gz **

# 打包
cd /root
tar zcvf /root/rpmbuild/SOURCES/$newName-$newVersion.tar.gz $newName-$newVersion
yum -y install rpm-build
rpmbuild -ba /root/rpmbuild/SPECS/$newName.spec


# 刪除產製中的資料
mv -f /root/rpmbuild/RPMS/x86_64/$newName-$newVersion-1.x86_64.rpm /root/$newName-$newVersion-1.x86_64.rpm		
rm -rf /root/$newName-$newVersion	
rm -rf /root/rpmbuild/SRPMS/$newName-$newVersion-1.src.rpm	
rm -rf /root/rpmbuild/SOURCES/$newName-$newVersion.tar.gz
rm -rf /root/rpmbuild/BUILD/$newName-$newVersion
_EOF_
	chmod +x /root/rpmbuild.sh
#------------------------------------------------------------------------------------------------------------------------------------	
	
	cat > /root/db.sh <<_EOF_
#!/bin/bash

/root/rpmbuild.sh

rpm -ivh $newName-1.1.1-1.x86_64.rpm
echo /opt/$newName/db/bin/mysql -u root -pM8r@WSX --socket=/tmp/${newName}db.sock
/opt/$newName/db/bin/mysql -u root -pM8r@WSX --socket=/tmp/${newName}db.sock <<EOF

#執行sql
DROP DATABASE asmanager;
source /root/$newName/db/$newName.sql 
# 更改密碼
SET password for 'root'@'localhost'=password('${password}')  
exit;
EOF

#暫停資料庫: 
service $newNamedb stop
#壓縮db
cd /opt/$newName/
tar zcvf $newName_db.tar.gz db
#移動位置
cd /opt/$newName/ /root/$newName/
#至刪除舊db
rm -rf db
#解壓新的db
tar zxvf $newName_db.tar.gz
#刪除db的tar檔
rm -rf $newName_db_db.tar.gz
# 刪除rpm
rpm -e $newName-1.1.1-1.x86_64
# 結束
echo end

rm -rf $newName-$newVersion-1.x86_64

_EOF_
	chmod +x /root/db.sh
#------------------------------------------------------------------------------------------------------------------------------------		
	
	cat > /root/first.sh <<_EOF_
#!/bin/bash

java=/root/temp/java
web=/root/temp/web
webapps=/root/temp/web/webapps

###壓縮多個檔案  tar zcvf rpmbuildAll.tar.gz rpmbuild asmanager-1.1.0 asmanager rpmbuild.sh

if [ "$oldName" != "$newName" ];then
	# 1.解壓縮
	#tar zxvf rpmbuildAll.tar.gz
	#rm -rf rpmbuildAll.tar.gz

	# 2.改資料夾
		## 修改資料夾名稱/root/$oldName-1.1.0
		###先複製一份新的
		mv /root/$oldName-1.1.0 /root/$newName-1.1.0
		###刪除舊檔案夾
		rm -rf /root/$oldName-1.1.0

		## 修改資料夾名稱/root/$oldName
		###先複製一份新的
		mv /root/$oldName /root/$newName
		###刪除舊檔案夾
		rm -rf /root/$oldName

		## 修改資料夾名稱/root/$newName/db/data/$oldName
		###先複製一份新的
		mv /root/$newName/db/data/$oldName /root/$newName/db/data/$newName
		###刪除舊檔案夾
		rm -rf /root/$newName/db/data/$oldName


	#3.改檔案名並改內容

		## 修改build.sh檔案
		mv /root/rpmbuild/build.sh /root/rpmbuild/build2.sh
		sed -e "s/$oldName/$newName/g" /root/rpmbuild/build2.sh > /root/rpmbuild/build.sh
		chmod +x /root/rpmbuild/build.sh
		rm -rf /root/rpmbuild/build2.sh

		### 修改資料夾名稱/root/rpmbuild/SPECS/asmanager.spec
		sed -e "s/$oldName/$newName/g" -e "s/$oldBigName/$newBigName/g" /root/rpmbuild/SPECS/$oldName.spec > /root/rpmbuild/SPECS/$newName.spec
		chmod +x /root/rpmbuild/SPECS/$newName.spec
		rm -rf /root/rpmbuild/SPECS/$oldName.spec
		
		## 更改檔案名稱/asmanager-1.1.0/asmanagerdb.service
		sed -e "s/$oldBigName/$newBigName/g" -e "s/$oldName/$newName/g" /root/$newName-1.1.0/$oldNamedb.service > /root/$newName-1.1.0/$newNamedb.service
		chmod +x /root/$newName-1.1.0/$newNamedb.service
		rm -rf /root/$newName-1.1.0/$oldNamedb.service
		
		## 更改檔案名稱/asmanager-1.1.0/asmanagerweb.service
		sed -e "s/$oldBigName/$newBigName/g" -e "s/$oldName/$newName/g" /root/$newName-1.1.0/$oldNameweb.service > /root/$newName-1.1.0/$newNameweb.service
		chmod +x /root/$newName-1.1.0/$newNameweb.service
		rm -rf /root/$newName-1.1.0/$oldNameweb.service
		
		## 更改內容/root/$newName-1.1.0/install.sh
		mv /root/$newName-1.1.0/install.sh /root/$newName-1.1.0/install2.sh
		sed -e "s/$oldName/$newName/g" /root/$newName-1.1.0/install2.sh > /root/$newName-1.1.0/install.sh
		chmod +x /root/$newName-1.1.0/install.sh
		rm -rf /root/$newName-1.1.0/install2.sh
		
		## 修改/root/$newName/update.sh
		#先複製一份新的
		mv /root/$newName/update.sh /root/$newName/update2.sh
		sed -e "s/$oldName/$newName/g" /root/$newName/update2.sh > /root/$newName/update.sh
		chmod +x /root/$newName/update.sh
		rm -rf /root/$newName/update2.sh

fi

if [ "\$(ls -A \$java)" ]; then  #檢查一個目錄是否為空目錄
	echo "copy Java"
	cd /root/$newName/java
	#清空所有資料
	rm -rf *
	cp -r /root/temp/java/ /root/$newName/
else
	echo "$java is Empty"
fi

if [ "\$(ls -A \$web)" ]; then
	echo "copy web"
	cd /root/$newName/web
	#清空所有資料
	rm -rf *
	cp -r /root/temp/web/ /root/$newName/
	# 產生setenv檔，設定環境變數
	cat > /root/$newName/web/bin/setenv.sh <<EOF
	export JRE_HOME=/opt/$newName/java
	export CATALINA_PID=/var/run/${newName}web.pid
	#export JAVA_OPTS="-Xms2048M -Xmx2048M"
EOF
	chmod +x /root/$newName/web/bin/setenv.sh
else
	echo "$web is Empty"
fi


if [ "\$(ls -A \$webapps)" ]; then
	echo "copy webapps"
	cd /root/$newName/web/webapps
	#清空所有資料
	rm -rf *
	cp -r /root/temp/web/webapps/ROOT /root/$newName/web/webapps/
	echo "copy sql"
	cp -r /root/temp/sql/$newName.sql /root/$newName/web/webapps/$newName.sql

else
	echo "$webapps is Empty"
fi

	## 修改/root/temp/config/my.cnf
	sed -i "s/$oldName/$newName/g" /root/temp/config/my.cnf > /root/$newName/db/my.cnf


_EOF_
	chmod +x /root/first.sh
#------------------------------------------------------------------------------------------------------------------------------------		
